# Generated by Django 5.1.6 on 2025-02-13 14:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cabs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='PredM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ind', models.CharField(default='0', max_length=50)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('prepod', 'Преподаватель'), ('uchebnaya_chast', 'Учебная часть')], default='prepod', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Predmets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours_1sem', models.IntegerField(default=0)),
                ('hours_2sem', models.IntegerField(default=0)),
                ('hours_total', models.IntegerField(default=0)),
                ('hours_used', models.IntegerField(default=0)),
                ('hours_remaining', models.IntegerField(default=0)),
                ('pairs_remaining', models.IntegerField(default=0)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='uchet1.group')),
                ('ind', models.ForeignKey(default='0', on_delete=django.db.models.deletion.CASCADE, related_name='index', to='uchet1.predm')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pred_name', to='uchet1.predm')),
            ],
        ),
        migrations.CreateModel(
            name='Prepods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('Cab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='uchet1.cabs')),
                ('predmet', models.ManyToManyField(blank=True, to='uchet1.predm')),
            ],
        ),
        migrations.AddField(
            model_name='predm',
            name='prepod',
            field=models.ManyToManyField(blank=True, to='uchet1.prepods'),
        ),
        migrations.AddField(
            model_name='group',
            name='kurator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='kurator', to='uchet1.prepods'),
        ),
        migrations.AddField(
            model_name='group',
            name='master',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='master', to='uchet1.prepods'),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(choices=[('Пн', 'Понедельник'), ('Вт', 'Вторник'), ('Ср', 'Среда'), ('Чт', 'Четверг'), ('Пт', 'Пятница'), ('Сб', 'Суббота')], max_length=2, verbose_name='День недели')),
                ('date', models.DateField(verbose_name='Дата')),
                ('pair_number', models.PositiveSmallIntegerField(verbose_name='Номер пары')),
                ('cabinet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='uchet1.cabs', verbose_name='Кабинет')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uchet1.group', verbose_name='Группа')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='uchet1.predmets', verbose_name='Предмет')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='uchet1.group', verbose_name='Группа')),
            ],
        ),
        migrations.CreateModel(
            name='PA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Оценка')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uchet1.predmets', verbose_name='Предмет')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uchet1.student', verbose_name='Студент')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_score', models.FloatField(blank=True, null=True, verbose_name='Итоговая оценка')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uchet1.predm', verbose_name='Предмет')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uchet1.student', verbose_name='Студент')),
            ],
        ),
    ]
